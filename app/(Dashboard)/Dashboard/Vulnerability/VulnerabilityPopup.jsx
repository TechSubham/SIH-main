"use client";
import React from "react";
import { AlertCircle } from "lucide-react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog";

const VulnerabilityPopup = ({ vulnerability, isOpen, onClose }) => {
  const getSeverityClass = (severity) => {
    switch (severity?.toLowerCase()) {
      case "important":
        return "bg-red-100 text-red-800 border-red-200";
      case "moderate":
        return "bg-yellow-100 text-yellow-800 border-yellow-200";
      case "high":
        return "bg-purple-100 text-purple-800 border-purple-200";
      case "medium":
        return "bg-green-100 text-green-800 border-green-200";
      case "critical":
        return "bg-red-100 text-red-800 border-red-200";
      default:
        return "bg-gray-200 text-gray-800 border-gray-300";
    }
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-[600px] max-h-[80vh] overflow-y-auto p-6 rounded-lg shadow-2xl bg-white">
        <DialogHeader className="flex flex-col items-center">
          <AlertCircle className="w-16 h-16 text-red-500 mb-4 " />
          <DialogTitle
            className={`text-xl font-semibold mb-2 p-2 rounded ${getSeverityClass(
              vulnerability.severity
            )}`}
          >
            {vulnerability.severity}
          </DialogTitle>
        </DialogHeader>
        <DialogDescription className="text-left mt-4">
          <div className="space-y-6">
            <InfoItem label="CVE ID" value={vulnerability.cve_id} />
            <InfoItem
              label="Published Date"
              value={vulnerability.published_date}
            />
            <InfoItem label="Description" value={vulnerability.description} />
            <InfoItem label="Summary" value={vulnerability.summary} />
            <InfoItem
              label="Organisation"
              value={
                <a
                  href={vulnerability.org_link}
                  className="text-blue-600 hover:underline"
                >
                  {vulnerability.org_link}
                </a>
              }
            />
            <InfoItem
              label="Recommendations"
              value={vulnerability.recommendations}
            />
            <AffectedProducts products={vulnerability.affected_products} />
          </div>
        </DialogDescription>
      </DialogContent>
    </Dialog>
  );
};

const InfoItem = ({ label, value }) => (
  <div className="flex flex-col space-y-1 bg-gray-50 p-4 rounded-lg shadow-sm">
    <span className="font-semibold text-gray-800">{label}:</span>
    {console.log(value, typeof value, "Data")}
    {typeof value === "object" ? (
      value
    ) : (
      <span className="text-gray-700">{value || "N/A"}</span>
    )}
  </div>
);

const AffectedProducts = ({ products }) => {
  return (
    <div className="flex flex-col space-y-1 bg-gray-50 p-4 rounded-lg shadow-sm">
      <span className="font-semibold text-gray-800">Affected Products:</span>
      {products.map((product) => (
        <span key={product} className="text-gray-700">
          {product || "N/A"}
        </span>
      ))}
    </div>
  );
};

export default VulnerabilityPopup;
