import { MongoClient } from "mongodb";

const uri =
  "mongodb+srv://qubit-root:f2NqL1WzplvqLbE3@qubit-arvrs.lfzfu.mongodb.net/?retryWrites=true&w=majority&appName=qubit-arvrs";
const db = "arvrs";

let client;
let clientPromise;

if (!global._mongoClientPromise) {
  client = new MongoClient(uri);
  global._mongoClientPromise = client.connect();
}

clientPromise = global._mongoClientPromise;

async function getConnectedClient() {
  if (!clientPromise) {
    client = new MongoClient(uri);
    clientPromise = client.connect();
  }
  return clientPromise;
}

export async function GET(request) {
  try {
    const client = await getConnectedClient();
    const database = client.db(db);
    const collection = database.collection("vulnerability");

    const vulnerabilities = await collection
      .find({ severity: { $ne: null } }) // Exclude documents where severity is null
      .project({
        cve_id: 1,
        published_date: 1,
        description: 1,
        severity: 1,
        _id: 0,
        summary: 1,
        org_link: 1,
        recommendations: 1,
        affected_products: 1,
      })
      .sort({ published_date: -1 }) // Sort by published_date in descending order
      .toArray();

    /* console.log('Fetched vulnerabilities:', JSON.stringify(vulnerabilities.slice(0, 2), null, 2)); */

    return new Response(JSON.stringify(vulnerabilities), {
      headers: { "Content-Type": "application/json" },
      status: 200,
    });
  } catch (error) {
    console.error("Error in API route:", error);
    return new Response(JSON.stringify({ error: error.message }), {
      headers: { "Content-Type": "application/json" },
      status: 500,
    });
  }
}
